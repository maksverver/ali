- Check memory use with valgrind (interpreter only?)

alic: (all of these can wait till later:)
 - Support for forward declarations of functions/procedures?

ali:
 - Implement transcript logging:
   include time, commands, output
 - Implement state saving/restoring (just store the transcript?)
Later:
 - Reimplement interpreter code as a reusable library.
 - All output should be written to a buffer, and then line-wrapped on display.
   (Makes more sense to do this in an interpreter library.) 
Low priority:
 - Use zlib to read gzip compressed module file
 - BUG: the interpreter will hang on (nearly) infinite loops
 - BUG: should enforce that strings in string table are zero-terminated
 - To be determined: implement choice() built-in function? How should it work? 

Documentation:
 - finish language documentation
Later:
 - write tutorial?
